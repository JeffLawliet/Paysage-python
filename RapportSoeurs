	La fonction dessineMaison est divisée en 5 parties : la façade, le toit, la porte, la poignée et les fenetres. L'utilisateur peut choisir, où placer la maison(abcisse et ordonnées), la hauteur et largeur (dans un intervalle donné), ainsi que la couleur de la façade, du toit et de la porte. 
La façade est constitué d'une boucle permettant d'obtenir le rectangle de la maison. 
Pour le toit, la difficulté a été de trouver la longueur à utiliser ainsi que l'angle, afin que le toit soit proportionnel à la hauteur de la maison. On a donc utilisé le théoreme de Pythagore pour etre le plus précis possible dans nos calculs.
La porte peut se trouver à 3 positions différentes gràce au module random utilisé, qui va choisir un nombre entre 1 et 3. En fonction de ce nombre, la porte est soit à gauche, au milieu ou à droite. Il a donc fallu poser une condition pour chaque nombre afin de positionner le curseur, avant de tracer la porte elle meme (le principe est identique à celui de la façade). L'utilisateur ne choisit pas la hauteur de la porte, celle ci est proportionnelle à la hauteur de la maison. 
Pour la poignée, il a fallu tenir compte de la position de la porte (et placer le curseur en conséquence) puis dessiner un cercle (dont le diamètre est calculé en fonction des longueurs données). 
Enfin les fenetres sont en plusieurs parties : la lucarne sur le toit, et celles sur la façade. La lucarne sur le toit présente une partie d'aléatoire : elle peut ne pas etre présente. Pour la créer, il suffit de superposer deux cercles de meme centre (et de couleur différentes) puis d'y faire une croix (on modifie à ce moment l'épaisseur du trait afin que la croix soit plus visible). Sur la façade, deux fenetres sont dessinées "à l'étage supérieur", sur le meme principe que la lucarne : on remplace le cercle par un rectangle (ici deux sont dessinés, pour avoir le contour de la fenetre) et on dessine la croix. Cette meme fenetre sera dessinée à gauche ou à droite de la porte selon la position de celle-ci (on utilise des conditions). Si la porte est au milieu, on ne dessine pas d'autres fenetres.
Les difficultés principales résident surtout dans le fait que chaque élément de la maison doit etre proportionnel aux données fournies par l'utilisateur. Il faut donc trouver les coefficients adaptés pour chacun d'eux. 

	Pour la fonction dessineBouée, seuls les coordonnées de la bouée sont demandées à l'utilisateur. Pour le corps de la bouée, on trace deux cercles (le premier de couleur orange, le second de la couleur de l'arrière plan par défaut blanc) grace à la commande circle. Afin de tracer les 4 bandes grises, on utilise une boucle qui "dit que" tant que mon curseur n'a pas atteint l'une des 4 positions données, celui ci avance d'un rang le long du second cercle. Lorsque l'une des positions, préalablement définies, est atteinte on dessine une bande grise (on trace un trait en utilisant forward, puis on suit la courbe du premier cercle et finalement on retrace un trait afin de revenir le lond du second cercle). La difficulté de cette fonction se trouve dans les angles, car le curseur se trouvant sur un cercle, les angles ne varient pas de la meme manière que lorsque que celui ci suit une droite.

	Pour la fonction dessinePhare, on ne demande encore une fois que les coordonnées du phare. Pour la base, on utilise une boucle dessinant un certain nombre de rectangles. Afin de colorier un rectangle sur deux, on écrit que si i est divisible par 2 (i%2==0), on colorie le rectangle en rouge, sinon en blanc. 
Pour la ballustrade, on utilise une boucle incrémentée dans une autre : la plus grande définit le nombre de rectangles voulus, et la plus petite dessine les rectangles eux memes. On utilise le meme procédé pour la lumière du phare en modifiant les longueurs ainsi que le nombre de rectangles. Enfin le dome est constitué d'un demi cercle, que l'on dessine en tapant circle(<longueur>,180). 
Les difficultés rencontrées se trouvent principalement dans le choix des longueurs pour les nombreux rectangles constituant ce phare.

	La fonction dessineDauphin n'implique l'utilisateur que dans le choix des coordonnées. Cette fonction est essentiellement constituée d'arc de cercle, rendant celle ci beaucoup plus difficile à définir car les courbes impliquent qu'il faut trouver l'angle exact pour que notre curseur se dirige dans la position voulue. Dès le départ, l'épaisseur du trait est augmenté afin de mieux visualiser les courbes. Pour le corps, le diametre des cercles est assez elevé afin que la courbe soit moins prononcée. La dorsale et la nageoire sont dessinées selon le meme principe, les diametres des cercles variant quelque peu. Un obstacle rencontré a été lorsque la fin de la queue était tracée : celle ci ne rejoignait pas le reste du corps. Il a donc fallu trouver l'arc de cercle ayant le bon diamètre et la bonne longueur pour rejoindre le reste du corps. On avait d'abord pensé à un segment, mais cela ne collait pas avec le reste du dessin. 
La difficulté de cette fonction réside donc principalement dans les angles à déterminer pour que les courbes s'harmonisent au mieux.

	La fonction dessineRoute demande à l'utilisateur les coordonnées du point bas gauche de la route, la longueur de la route ainsi que sa largeur et dessine donc une route dans un rectangle noir avec des traits discontinus au milieu. Le curseur se place tout d'abord aux points donnés grace à la fonction aller puis la fonction dessineRectangle va dessiner un rectangle noir qui a comme données la longueur et la largeur de la route. Enfin, une boucle va dessiner à l'aide de la fonction dessineTrait, des traits blancs au milieu du rectangle, espacés de manière régulière. La difficulté rencontrée a été de bien paramétrer la boucle pour que les traits blancs se dessinent avec des espaces réguliers entre chaque sur toute la longueur du rectangle.

	La fonction dessineFleur demande à l'utilisateur les coordonnées du début de la tige (au sol) et la hauteur de la fleur et dessine une marguerite. Le curseur va en haut de la fleur grace à la fonction aller puis il dessine les pétales grace à des sortes de demi-cercles et grace à une boucle puis il remplit le tout en blanc. Ensuite, il va se positionner au centre de la fleur et va faire un cercle qu'il remplit en jaune. Enfin, le curseur va se positionner en dessous des pétales et va tracer la tige. Pour tracer la tige, il dessine d'abord une courbe en prenant la fonction circle et en prenant un grand diamètre et un angle faible. Pour faire la feuille, le curseur va se tourner d'un certain angle et crée des sortes de demi-cercles et pour finir la tige et revenir au point de départ de l'utilisateur, on utilise la fonction cricle avec le meme diamètre que précédemment mais avec un angle différent. La difficulté rencontrée a été de tout bien proportionner par rapport à la taille de la fleur et des pétales.

	La fonction dessineVoiture demande à l'utilisateur les coordonnées du centre de la roue, son diamètre et la couleur de la voiture pour créer une voiture en fonction de ces paramètres. La fonction aller permet au curseur de se déplacer aux coordonnées indiquées. Ensuite, la fonction dessineRoue permet de créer la roue en créant 3 cercles de 3 diamètres et couleurs différents. Puis la fonction va dessiner la carrosserie puis les vitres et enfin les lumières. Pour créer cette fonction, il a fallu dessiner une voiture au départ en mettant la roue aux coordonnées (0,0) puis il a fallu écire la fonction en fonction de ces coordonées et du diamètre de la roue. La difficulté pour créer cette fonction a donc été de constrire la voiture proportionnellement au diamètre de la roue.

	La fonction dessineLamapadaire demande à l'utilisateur les coordonnées du point bas gauche du lampadaire, la couleur du lampadaire et si celui-ci est allumé ou éteint et dessine un lampadaire en fonction de ces paramètres. Grace à la fonction aller, le curseur se place et dessine le lampadaire. Si celui-ci est allumé, alors la couleur du haut est jaune et s'il est éteint, il est gris. La difficulté pour cette fonction a été d'une part de dessiner le lampadaire à partir du point (0,0) puis d'en faire une fonction en remplacant (0,0) par des coordonnées que l'utilisateur rentrera.

	La fonction dessineMer demande à l'utilisateur le moment de la journée et si la mer est agitée ou calme et dessine une mer sur toute la moitié de l'écran en fonction de ces paramètres. Cette fonction dessine une mer de couleur différente selon le moment de la journée et si la mer est calme ou agitée sur toute la moitié de l'écran. Pour cela, ele trace d'abord la forme des vagues à l'horizon grace aux différentes fonctions dessineVague en fonction de l'agitation de la mer puis il y a un remplissage avec une couleur prédéfine en fonction des paramètres. Enfin d'autres vagues sont ajoutées dans la mer de manière aléatoire (placement et taille aléatoires). La difficulté pour créer cette fonction a été d'utiliser la fonction random pour placer des vagues aléatoirement ainsi que créer les fonctions dessineVague en créant d'abord la forme d'une vague et en la reproduisant avec des boucles.

	La fonction dessineSable demande à l'utlisateur le point bas gauche du morceau de plage, la longueur et la largeur de celle-ci ainsi que le moment de la journée et dessine une plage en forme de rectangle. Le curseur se déplace aux coordonnées indiquées grace à la fonction aller. Elle dessine un rectangle de couleur différente selon s'il fait jour ou nuit et de largeur et longueur indiqués par l'utilisateur grace à la fonction dessineRectangle. Puis avec une boucle, il dessine des vagues de sable selon l'hauteur grace à la fonction dessineVague qui dessine des vagues avec des circle et une boucle. La difficulté a été de créer la fonction dessineVague et de l'itégrer dans le rectangle.
